# Copyright (c) Huawei Technologies Co., Ltd. 2020-2020. All rights reserved.

import("//build/lite/config/component/lite_component.gni")

config("algos_camgroup_config") {
  include_dirs = [
    ".",
    "../",
    "../iq_parser",
    "../iq_parser_v2",
    "../include/algos",
    "../include",
    "../include/xcore/base",
    "../include/xcore",
    "../include/iq_parser",
    "../include/iq_parser_v2",
    "../include/iq_parser_v2/j2s",
    "../include/common",
    "../uAPI",
    "../uAPI/include",
    "../include/uAPI2",    
    "../common",
    "../xcore/base",
    "../xcore",
    "../aiq_core",      
    "../algo_handlers",
    "../algos",
    "../algos_camgroup",
    "../include/ipc_server",
    ]
    
    cflags_cc = [
      "-DISP_HW_V30",
      "-DRKAIQ_ENABLE_PARSER_V1",
      "-DRKAIQ_ENABLE_CAMGROUP",
      "-ffast-math",
      "-funroll-loops",
      "-Os",
      "-g",
      "-Wno-error",
      "-Wno-unused-value",
      "-Wno-unused-variable",
      "-Wno-unused-private-field",
      "-Wno-unused-function",
      "-Wno-implicit-fallthrough",
      "-Wno-address-of-packed-member",
      "-Wno-ignored-qualifiers",
      "-Wno-unused-label",
      "-fno-strict-aliasing",
      "-Wno-reorder",
      "-Wno-overloaded-virtual",
      "-Wno-unused-parameter",
      "-Wno-extern-c-compat",
      "-Wno-missing-braces",
      "-Wno-missing-field-initializers",
      "-Wno-c99-designator",
      "-Wno-macro-redefined",
      "-Wno-header-hygiene",
      "-Wno-misleading-indentation",
      "-frtti",
      "-fno-function-sections",
      "-fno-data-sections",
    ]
    ldflags = [
      "-fno-function-sections",
      "-fno-data-sections",
    ]
    defines = [
#"GENMESH_ONLINE",
      "ISP_HW_V30",
    ]
}

static_library("rkaiq_camgroup_misc_static") {
  sources = [
      "misc/rk_aiq_algo_camgroup_a3dlut_itf.cpp",
      "misc/rk_aiq_algo_camgroup_accm_itf.cpp",
      "misc/rk_aiq_algo_camgroup_adpcc_itf.cpp",
      "misc/rk_aiq_algo_camgroup_alsc_itf.cpp",
      "misc/rk_aiq_algo_camgroup_adhaz_itf.cpp",
      "misc/rk_aiq_algo_camgroup_agamma_itf.cpp",
      "misc/rk_aiq_algo_camgroup_adrc_itf.cpp",
      "misc/rk_aiq_algo_camgroup_ablc_itf.cpp",
      "aynr/rk_aiq_algo_camgroup_aynr_itf.cpp",
      "aynr/rk_aiq_uapi_camgroup_aynr_int_v3.cpp",
      "acnr/rk_aiq_algo_camgroup_acnr_itf.cpp",
      "acnr/rk_aiq_uapi_camgroup_acnr_int_v2.cpp",
      "asharp/rk_aiq_algo_camgroup_asharp_itf.cpp",
      "asharp/rk_aiq_uapi_camgroup_asharp_int_v4.cpp",
      "abayernr/rk_aiq_algo_camgroup_abayernr_itf.cpp",
      "abayernr/rk_aiq_uapi_camgroup_abayer2dnr_int_v2.cpp",
      "atnr/rk_aiq_algo_camgroup_atnr_itf.cpp",
      "atnr/rk_aiq_uapi_camgroup_atnr_int_v2.cpp",
      "again/rk_aiq_algo_camgroup_again_itf.cpp",
      "again/rk_aiq_uapi_camgroup_again_int_v2.cpp",
  ]
 
  output_name = "rkaiq_camgroup_misc"
  public_configs = [ ":algos_camgroup_config" ]
  include_dirs = [
    "../include/algos/a3dlut",
    "../include/algos/accm",
    "../include/algos/adpcc",
    "../include/algos/alsc",
    "../include/algos/adehaze",
    "../include/algos/agamma",
    "../include/algos/adrc",
    "../include/algos/ablc",
    "../include/algos/asharp4",
    "../algos",
    "../algos_camgroup",
  ]
}

